//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebUI.ZipCityServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZipCity", Namespace="http://schemas.datacontract.org/2004/07/Domain")]
    [System.SerializableAttribute()]
    public partial class ZipCity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int _idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int _zipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _city {
            get {
                return this._cityField;
            }
            set {
                if ((object.ReferenceEquals(this._cityField, value) != true)) {
                    this._cityField = value;
                    this.RaisePropertyChanged("_city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _id {
            get {
                return this._idField;
            }
            set {
                if ((this._idField.Equals(value) != true)) {
                    this._idField = value;
                    this.RaisePropertyChanged("_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _zipCode {
            get {
                return this._zipCodeField;
            }
            set {
                if ((this._zipCodeField.Equals(value) != true)) {
                    this._zipCodeField = value;
                    this.RaisePropertyChanged("_zipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ZipCityServiceReference.IZipCityService")]
    public interface IZipCityService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZipCityService/Read", ReplyAction="http://tempuri.org/IZipCityService/ReadResponse")]
        WebUI.ZipCityServiceReference.ZipCity Read(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZipCityService/Read", ReplyAction="http://tempuri.org/IZipCityService/ReadResponse")]
        System.Threading.Tasks.Task<WebUI.ZipCityServiceReference.ZipCity> ReadAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZipCityService/ReadByZipCode", ReplyAction="http://tempuri.org/IZipCityService/ReadByZipCodeResponse")]
        WebUI.ZipCityServiceReference.ZipCity ReadByZipCode(string zipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZipCityService/ReadByZipCode", ReplyAction="http://tempuri.org/IZipCityService/ReadByZipCodeResponse")]
        System.Threading.Tasks.Task<WebUI.ZipCityServiceReference.ZipCity> ReadByZipCodeAsync(string zipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZipCityService/GetAll", ReplyAction="http://tempuri.org/IZipCityService/GetAllResponse")]
        WebUI.ZipCityServiceReference.ZipCity[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZipCityService/GetAll", ReplyAction="http://tempuri.org/IZipCityService/GetAllResponse")]
        System.Threading.Tasks.Task<WebUI.ZipCityServiceReference.ZipCity[]> GetAllAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IZipCityServiceChannel : WebUI.ZipCityServiceReference.IZipCityService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ZipCityServiceClient : System.ServiceModel.ClientBase<WebUI.ZipCityServiceReference.IZipCityService>, WebUI.ZipCityServiceReference.IZipCityService {
        
        public ZipCityServiceClient() {
        }
        
        public ZipCityServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ZipCityServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZipCityServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZipCityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebUI.ZipCityServiceReference.ZipCity Read(int id) {
            return base.Channel.Read(id);
        }
        
        public System.Threading.Tasks.Task<WebUI.ZipCityServiceReference.ZipCity> ReadAsync(int id) {
            return base.Channel.ReadAsync(id);
        }
        
        public WebUI.ZipCityServiceReference.ZipCity ReadByZipCode(string zipCode) {
            return base.Channel.ReadByZipCode(zipCode);
        }
        
        public System.Threading.Tasks.Task<WebUI.ZipCityServiceReference.ZipCity> ReadByZipCodeAsync(string zipCode) {
            return base.Channel.ReadByZipCodeAsync(zipCode);
        }
        
        public WebUI.ZipCityServiceReference.ZipCity[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<WebUI.ZipCityServiceReference.ZipCity[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
    }
}
