//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsPCStore.EmployeeServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/Domain")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _fNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int _idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _lNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _saltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _fName {
            get {
                return this._fNameField;
            }
            set {
                if ((object.ReferenceEquals(this._fNameField, value) != true)) {
                    this._fNameField = value;
                    this.RaisePropertyChanged("_fName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _id {
            get {
                return this._idField;
            }
            set {
                if ((this._idField.Equals(value) != true)) {
                    this._idField = value;
                    this.RaisePropertyChanged("_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _lName {
            get {
                return this._lNameField;
            }
            set {
                if ((object.ReferenceEquals(this._lNameField, value) != true)) {
                    this._lNameField = value;
                    this.RaisePropertyChanged("_lName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _password {
            get {
                return this._passwordField;
            }
            set {
                if ((object.ReferenceEquals(this._passwordField, value) != true)) {
                    this._passwordField = value;
                    this.RaisePropertyChanged("_password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _salt {
            get {
                return this._saltField;
            }
            set {
                if ((object.ReferenceEquals(this._saltField, value) != true)) {
                    this._saltField = value;
                    this.RaisePropertyChanged("_salt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _username {
            get {
                return this._usernameField;
            }
            set {
                if ((object.ReferenceEquals(this._usernameField, value) != true)) {
                    this._usernameField = value;
                    this.RaisePropertyChanged("_username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeNotCreatedException", Namespace="http://schemas.datacontract.org/2004/07/Exceptions")]
    [System.SerializableAttribute()]
    public partial class EmployeeNotCreatedException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeNotExistException", Namespace="http://schemas.datacontract.org/2004/07/Exceptions")]
    [System.SerializableAttribute()]
    public partial class EmployeeNotExistException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeServiceReference.IEmployeeService")]
    public interface IEmployeeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/Create", ReplyAction="http://tempuri.org/IEmployeeService/CreateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsFormsPCStore.EmployeeServiceReference.EmployeeNotCreatedException), Action="http://tempuri.org/IEmployeeService/CreateEmployeeNotCreatedExceptionFault", Name="EmployeeNotCreatedException", Namespace="http://schemas.datacontract.org/2004/07/Exceptions")]
        int Create(WindowsFormsPCStore.EmployeeServiceReference.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/Create", ReplyAction="http://tempuri.org/IEmployeeService/CreateResponse")]
        System.Threading.Tasks.Task<int> CreateAsync(WindowsFormsPCStore.EmployeeServiceReference.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/Read", ReplyAction="http://tempuri.org/IEmployeeService/ReadResponse")]
        WindowsFormsPCStore.EmployeeServiceReference.Employee Read(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/Read", ReplyAction="http://tempuri.org/IEmployeeService/ReadResponse")]
        System.Threading.Tasks.Task<WindowsFormsPCStore.EmployeeServiceReference.Employee> ReadAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/ReadByUsername", ReplyAction="http://tempuri.org/IEmployeeService/ReadByUsernameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsFormsPCStore.EmployeeServiceReference.EmployeeNotExistException), Action="http://tempuri.org/IEmployeeService/ReadByUsernameEmployeeNotExistExceptionFault", Name="EmployeeNotExistException", Namespace="http://schemas.datacontract.org/2004/07/Exceptions")]
        WindowsFormsPCStore.EmployeeServiceReference.Employee ReadByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/ReadByUsername", ReplyAction="http://tempuri.org/IEmployeeService/ReadByUsernameResponse")]
        System.Threading.Tasks.Task<WindowsFormsPCStore.EmployeeServiceReference.Employee> ReadByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/CompareHashes", ReplyAction="http://tempuri.org/IEmployeeService/CompareHashesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsFormsPCStore.EmployeeServiceReference.EmployeeNotExistException), Action="http://tempuri.org/IEmployeeService/CompareHashesEmployeeNotExistExceptionFault", Name="EmployeeNotExistException", Namespace="http://schemas.datacontract.org/2004/07/Exceptions")]
        bool CompareHashes(string storedHash, string enteredHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/CompareHashes", ReplyAction="http://tempuri.org/IEmployeeService/CompareHashesResponse")]
        System.Threading.Tasks.Task<bool> CompareHashesAsync(string storedHash, string enteredHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/Update", ReplyAction="http://tempuri.org/IEmployeeService/UpdateResponse")]
        bool Update(WindowsFormsPCStore.EmployeeServiceReference.Employee employee, string oldUsername, string salt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/Update", ReplyAction="http://tempuri.org/IEmployeeService/UpdateResponse")]
        System.Threading.Tasks.Task<bool> UpdateAsync(WindowsFormsPCStore.EmployeeServiceReference.Employee employee, string oldUsername, string salt);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeServiceChannel : WindowsFormsPCStore.EmployeeServiceReference.IEmployeeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeServiceClient : System.ServiceModel.ClientBase<WindowsFormsPCStore.EmployeeServiceReference.IEmployeeService>, WindowsFormsPCStore.EmployeeServiceReference.IEmployeeService {
        
        public EmployeeServiceClient() {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Create(WindowsFormsPCStore.EmployeeServiceReference.Employee employee) {
            return base.Channel.Create(employee);
        }
        
        public System.Threading.Tasks.Task<int> CreateAsync(WindowsFormsPCStore.EmployeeServiceReference.Employee employee) {
            return base.Channel.CreateAsync(employee);
        }
        
        public WindowsFormsPCStore.EmployeeServiceReference.Employee Read(int id) {
            return base.Channel.Read(id);
        }
        
        public System.Threading.Tasks.Task<WindowsFormsPCStore.EmployeeServiceReference.Employee> ReadAsync(int id) {
            return base.Channel.ReadAsync(id);
        }
        
        public WindowsFormsPCStore.EmployeeServiceReference.Employee ReadByUsername(string username) {
            return base.Channel.ReadByUsername(username);
        }
        
        public System.Threading.Tasks.Task<WindowsFormsPCStore.EmployeeServiceReference.Employee> ReadByUsernameAsync(string username) {
            return base.Channel.ReadByUsernameAsync(username);
        }
        
        public bool CompareHashes(string storedHash, string enteredHash) {
            return base.Channel.CompareHashes(storedHash, enteredHash);
        }
        
        public System.Threading.Tasks.Task<bool> CompareHashesAsync(string storedHash, string enteredHash) {
            return base.Channel.CompareHashesAsync(storedHash, enteredHash);
        }
        
        public bool Update(WindowsFormsPCStore.EmployeeServiceReference.Employee employee, string oldUsername, string salt) {
            return base.Channel.Update(employee, oldUsername, salt);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAsync(WindowsFormsPCStore.EmployeeServiceReference.Employee employee, string oldUsername, string salt) {
            return base.Channel.UpdateAsync(employee, oldUsername, salt);
        }
    }
}
